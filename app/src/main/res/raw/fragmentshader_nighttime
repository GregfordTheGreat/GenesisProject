precision mediump float;		// Set the default precision to medium. We don't need as high of a precision in the fragment shader.
uniform sampler2D u_Texture;	// The input texture.
uniform vec4 u_LightColor;
uniform int u_TextureHandle;	// The input texture Handle

varying vec4 v_Color;			// This is the color from the vertex shader interpolated across the triangle per fragment.
varying vec2 v_TexCoordinate;	// Interpolated texture coordinate per fragment.
varying vec3 v_Normal;			// This will be passed into the fragment shader.

void main()						// The entry point for our fragment shader.
{
  vec4 final_color;

  vec3 n = normalize( v_Normal );

  //if(u_TextureHandle > 0 || n.x > 1.0)
  if(u_TextureHandle > 0)
  {
    vec4 texel = texture2D(u_Texture, v_TexCoordinate);
    final_color = texel.w * texel + (1.0 - texel.w) * v_Color;
  }
  else
  {
    final_color = v_Color;
  }

  vec4 diffuseColor = u_LightColor;
  final_color = final_color * diffuseColor;

  gl_FragColor = final_color;
}
