precision mediump float;		// Set the default precision to medium. We don't need as high of a precision in the fragment shader.

uniform sampler2D u_Texture;	// The input texture.

varying vec4 v_Color;			// This is the color from the vertex shader interpolated across the triangle per fragment.
varying vec2 v_TexCoordinate;	// Interpolated texture coordinate per fragment.

float LinearizeDepth(in vec2 uv)
{
    float zNear = 0.5;    // TODO: Replace by the zNear of your perspective projection
    float zFar  = 100.0; // TODO: Replace by the zFar  of your perspective projection
    float depth = texture2D(u_Texture, uv).z;
    return (2.0 * zNear) / (zFar + zNear - depth * (zFar - zNear));
}

void main()						// The entry point for our fragment shader.
{
//  vec4 texel = texture2D(u_Texture, v_TexCoordinate);
//  gl_FragColor = v_Color * texel;

  float c = LinearizeDepth(v_TexCoordinate);
  gl_FragColor = vec4(c, c, c, 1.0);
}
