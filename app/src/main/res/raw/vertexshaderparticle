precision mediump float;

uniform mat4 u_MVPMatrix; 			// A constant representing the combined model/view/projection matrix.
uniform vec3 u_CameraPos;
attribute vec4 a_Position; 			// Per-vertex position information we will pass in.
attribute vec4 a_Color;
uniform float u_PointSize;

const float minPointScale = 0.0;
const float maxPointScale = 1.0;
const float maxDistance   = 50.0;
varying vec4 v_Color;

void main()
{
  float cameraDist = distance(a_Position.xyz, u_CameraPos);
  float pointScale = 1.0 - (cameraDist / maxDistance);
  pointScale = max(pointScale, minPointScale);
  pointScale = min(pointScale, maxPointScale);

  gl_PointSize = a_Position.w * pointScale;
  gl_Position = u_MVPMatrix * vec4(a_Position.xyz, 1.0);
  v_Color = a_Color;
}